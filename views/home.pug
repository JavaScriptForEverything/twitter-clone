extends layout/mainLayout
block content
	include icon/icons
	include components/mui/@index
	include components/@index




	div(class='grid grid-cols-12 p-2 divide-x')

		//- left-section
		div(class='col-span-2')
			+NavComponent()

		//- middle-section
		div(class='col-span-10 md:col-span-7')

			div
				a(href='/login' class='border border-slate-500 px-3 py-1.5') Login
				a(href='/register' class='border border-slate-500 px-3 py-1.5') Register 
				a(href='/profile' class='border border-slate-500 px-3 py-1.5') Profile 
				br

			p(class='p-2 border-b border-slate-200') #{pageTitle}
			div(class='p-2 text-slate-700 flex gap-4 mb-8')
				+Avatar({ src: '/images/users/default.jpg' })
				div(class='[&>button]:mt-2 flex-1')
					+Textarea({ name: 'tween' })
					+Button({ value: 'Tween', disabled: false })

			//- tweets container to show tweets after fetch from backend 
			#tweets-container



		//- right-section
		div(class='hidden md:col-span-3')
			p right section hiddend for now

	script.
		const button = $('button')
		const textarea = $('textarea')

		if(!textarea.value.trim()) button.disabled = true
		textarea.addEventListener('input', (evt) => {
			if(!textarea.value.trim()) button.disabled = true
			if(textarea.value.trim()) button.disabled = false
		})

		// Tweet click handler
		button.addEventListener('click', async(evt) => {
			const res = await fetch('/api/tweets', {
				method: 'post',
				body: JSON.stringify({ tweet: textarea.value.trim() }),
				headers: {
					'content-type': 'application/json'
				}
			})

			const data = await res.json()
			const tweet = data.data
			textarea.value = ''
			console.log(data)

			$('#tweets-container').insertAdjacentHTML('afterbegin', createTweet({
						postedBy: tweet.user.username,
						avatar: tweet.user.avatar,
						fullName: `${tweet.user.firstName} ${tweet.user.lastName}`,
						username: tweet.user.username,
						date: `${timeSince(new Date(tweet.createdAt))}`,
						message: tweet.tweet,
						numberOfMessage: 0,
						numberOfRetweet: 0,
						numberOfHeart: 0,
			}))
		})

		const fetchTweets = async () => {
			try {

				const res = await fetch('/api/tweets', {
					method: 'get',
					headers: {
						'content-type': 'application/json'
					}
				})

				const data = await res.json()
				data.data?.reverse().forEach((tweet, _, tweets) => {
					//- console.log(tweet)

					//- $('#tweets-container').insertAdjacentHTML('beforeend', createTweet({
					//- 	postedBy: `@username`,
					//- 	avatar: '/images/users/default.jpg',
					//- 	fullName: 'Riajul Islam',
					//- 	username: 'riajulislam',
					//- 	date: '2 month ago',
					//- 	message: 'Your message goes here',
					//- 	numberOfMessage: 1,
					//- 	numberOfRetweet: 0,
					//- 	numberOfHeart: 2,
					//- }))

					$('#tweets-container').insertAdjacentHTML('beforeend', createTweet({
						id: tweet._id,
						postedBy: tweet.user.username,
						avatar: tweet.user.avatar,
						fullName: `${tweet.user.firstName} ${tweet.user.lastName}`,
						username: tweet.user.username,
						date: `${timeSince(new Date(tweet.createdAt))}`,
						message: tweet.tweet,
						numberOfMessage: tweets.length,
						numberOfRetweet: tweets.length,
						numberOfHeart: 0,
					}))

				})


			} catch (err) {
				console.log(err.message)
			}
		}
		fetchTweets();




		// Event Delegation: to handle chat retween and heart
		$('#tweets-container').addEventListener('click', async(evt) => {
			if(evt.target.tagName !== 'svg') return

			const container = evt.target.closest('.tweet-container')
			const tweetId = container.id
			if(!tweetId) return console.log('tweet._id is undefined')

			//- //- const chatEl = document.querySelector(':scope #chat')
			//- const chatEl = $(':scope #chat')
			//- console.log(evt.target)


			//- -----[ Handle chat button click ]-----
			if( evt.target.id === 'chat' ) {
				console.log('handle chat request here')
			} // End

			//- -----[ Handle retweet button click ]-----
			if( evt.target.id === 'retweet' ) {
				console.log('handle retweet request here')
			} // End

			//- -----[ Handle heart button click ]-----
			if( evt.target.id === 'heart' ) {

				const { data, error } = await axios({
					url: `/api/tweets/${tweetId}/like`,
					method: 'PATCH',
					data: { tweetId: 1 }
				})

				if(data) evt.target.style.fill = evt.target.style.fill !== 'red' ? 'red' : ''
				if(error) console.log('show error in dom instead of log')

				console.log({ data, error })

			} // End


			
		}) 	// Event Delegation block


	//- p
	//- 	a(href="/login") 
	//- 		button(type="button") Login

	//- p
	//- 	a(href="/logout") 
	//- 		button(type="submit") Logout
	//- p
	//- 	a(href="/user/profile") 
	//- 		button(type="submit") Profile
	

